@model ProjectDemoV1.Models.Question

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


@Styles.Render("~/Content/css")
<script src="~/Content/ckeditor/ckeditor.js"></script>
<div class="content">
    <div class="form-horizontal">
        <div class="form-group">
            @using (Html.BeginForm("ImportQuestion", "QuestionsApprove", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <input type="file" name="postedFile" style="border:1px solid #ccc;display:inline-block;padding:6px 12px;cursor:pointer" />
                <input type="submit" value="Thêm câu hỏi" />
            }
        </div>
    </div>

    @if (Session["SubjectId"] != null)
    {
        <div class="col-md-12 alert alert-success">
            <span>@TempData["Success"]</span>
        </div>
    }
    @using (Html.BeginForm("Create", "QuestionsApprove", FormMethod.Post, new { id = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <strong class="control-label col-md-2">Môn</strong>
                <div class="col-md-10">
                    @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong class="control-label col-md-2">Loại câu hỏi</strong>
                <div class="col-md-10">
                    @Html.DropDownList("TestTypeId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TestTypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong class="control-label col-md-2">Độ khó</strong>
                <div class="col-md-10">
                    @Html.DropDownList("LevelId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LevelId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <strong class="control-label col-md-2">Câu hỏi</strong>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.QuestionContent, new { htmlAttributes = new { @class = "form-control" }, @id = "editor" })
                    @Html.ValidationMessageFor(model => model.QuestionContent, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong class="control-label col-md-2">Ảnh đính kèm</strong>
                <div class="col-md-10">
                    <input type="file" name="uploadImage" />
                </div>
            </div>

            <div class="form-group">
                <strong class="control-label col-md-2">Đáp án A</strong>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OptionA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OptionA, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong class="control-label col-md-2">Đáp án B</strong>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong class="control-label col-md-2">Đáp án C</strong>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OptionC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OptionC, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong class="control-label col-md-2">Đáp án D</strong>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OptionD, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OptionD, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong class="control-label col-md-2">Đáp án đúng</strong>
                <div class="col-md-10">
                    @Html.DropDownList("Answer_Id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Answer_Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong class="control-label col-md-2">Lời giải</strong>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Solution, new { htmlAttributes = new { @class = "form-control" }, @id = "editor1" })
                    @Html.ValidationMessageFor(model => model.Solution, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.AccountId, new { @class = "form-control", @Value = @Session["AccountId"], @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                </div>
            </div>


            @if (Convert.ToInt32(@Session["RoleId"]) == 1)
            {
                <div class="form-group">
                    <strong class="control-label col-md-2">Trạng thái</strong>
                    <div class="col-md-10">
                        @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LevelId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            @if (Convert.ToInt32(@Session["RoleId"]) == 2)
            {
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.StatusId, new { @class = "form-control", @Value = ViewBag.StatusDefault, @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("Quay lại", "Index")
    </div>
</div>
<script>
    CKEDITOR.replace("editor");
    CKEDITOR.replace("editor1");
    function saveText() {
        CKEDITOR.instances.editor.getData();
    }
</script>

